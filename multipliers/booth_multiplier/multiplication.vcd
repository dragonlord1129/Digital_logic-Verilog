$date
	Sun Sep 29 01:00:13 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module booth_multiplier_tb $end
$var wire 8 ! product [7:0] $end
$var wire 8 " expected_product [7:0] $end
$var reg 4 # multiplicand [3:0] $end
$var reg 4 $ multiplier [3:0] $end
$scope module uut $end
$var wire 4 % multiplicand [3:0] $end
$var wire 4 & multiplier [3:0] $end
$var reg 2 ' check [1:0] $end
$var reg 8 ( product [7:0] $end
$var reg 1 ) q1 $end
$var integer 32 * i [31:0] $end
$scope function twos_compliment $end
$var reg 4 + data [3:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b11 +
b100 *
0)
b110 (
b0 '
b11 &
b10 %
b11 $
b10 #
b110 "
b110 !
$end
#10
1)
b11 '
b100 *
b11111010 !
b11111010 (
b11111010 "
b1110 #
b1110 %
#20
b1010 +
b10 '
b100 *
1)
b11110 !
b11110 (
b1010 $
b1010 &
b11110 "
b1011 #
b1011 %
#30
b0 +
b1 '
b100 *
0)
b0 !
b0 (
b0 $
b0 &
b0 "
b100 #
b100 %
#40
0)
b11111001 !
b11111001 (
b1111 +
b1 '
b100 *
b11111001 "
b1111 $
b1111 &
b111 #
b111 %
#50
0)
b1000 +
b1 '
b100 *
b111000 !
b111000 (
b11001000 "
b1000 $
b1000 &
#60
1)
b10 '
b100 *
b11000000 !
b11000000 (
b1000000 "
b1000 #
b1000 %
#70
