$date
	Tue Oct  1 01:07:35 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module multiplier_tb $end
$var wire 1 ! cout $end
$var wire 6 " PRODUCT [5:0] $end
$var reg 3 # A [2:0] $end
$var reg 3 $ B [2:0] $end
$scope module uut $end
$var wire 3 % A [2:0] $end
$var wire 3 & B [2:0] $end
$var wire 6 ' sum [5:0] $end
$var wire 1 ! cout $end
$var wire 6 ( carry_temp [5:0] $end
$var wire 6 ) PRODUCT [5:0] $end
$var reg 6 * shifted_carry [5:0] $end
$scope begin genblk1[0] $end
$upscope $end
$scope begin genblk1[1] $end
$upscope $end
$scope begin genblk1[2] $end
$upscope $end
$scope module csa $end
$var wire 6 + sum [5:0] $end
$var wire 6 , carry_out [5:0] $end
$var wire 6 - C [5:0] $end
$var wire 6 . B [5:0] $end
$var wire 6 / A [5:0] $end
$scope begin genblk1[0] $end
$scope module fa1 $end
$var wire 1 0 a $end
$var wire 1 1 b $end
$var wire 1 2 carry $end
$var wire 1 3 cin $end
$var wire 1 4 sum $end
$upscope $end
$upscope $end
$scope begin genblk1[1] $end
$scope module fa1 $end
$var wire 1 5 a $end
$var wire 1 6 b $end
$var wire 1 7 carry $end
$var wire 1 8 cin $end
$var wire 1 9 sum $end
$upscope $end
$upscope $end
$scope begin genblk1[2] $end
$scope module fa1 $end
$var wire 1 : a $end
$var wire 1 ; b $end
$var wire 1 < carry $end
$var wire 1 = cin $end
$var wire 1 > sum $end
$upscope $end
$upscope $end
$scope begin genblk1[3] $end
$scope module fa1 $end
$var wire 1 ? a $end
$var wire 1 @ b $end
$var wire 1 A carry $end
$var wire 1 B cin $end
$var wire 1 C sum $end
$upscope $end
$upscope $end
$scope begin genblk1[4] $end
$scope module fa1 $end
$var wire 1 D a $end
$var wire 1 E b $end
$var wire 1 F carry $end
$var wire 1 G cin $end
$var wire 1 H sum $end
$upscope $end
$upscope $end
$scope begin genblk1[5] $end
$scope module fa1 $end
$var wire 1 I a $end
$var wire 1 J b $end
$var wire 1 K carry $end
$var wire 1 L cin $end
$var wire 1 M sum $end
$upscope $end
$upscope $end
$upscope $end
$scope module result $end
$var wire 6 N A [5:0] $end
$var wire 6 O B [5:0] $end
$var wire 6 P sum [5:0] $end
$var wire 1 ! cout $end
$var wire 6 Q carry [5:0] $end
$scope begin genblk1[1] $end
$scope module FA $end
$var wire 1 R a $end
$var wire 1 S b $end
$var wire 1 T carry $end
$var wire 1 U cin $end
$var wire 1 V sum $end
$upscope $end
$upscope $end
$scope begin genblk1[2] $end
$scope module FA $end
$var wire 1 W a $end
$var wire 1 X b $end
$var wire 1 Y carry $end
$var wire 1 Z cin $end
$var wire 1 [ sum $end
$upscope $end
$upscope $end
$scope begin genblk1[3] $end
$scope module FA $end
$var wire 1 \ a $end
$var wire 1 ] b $end
$var wire 1 ^ carry $end
$var wire 1 _ cin $end
$var wire 1 ` sum $end
$upscope $end
$upscope $end
$scope begin genblk1[4] $end
$scope module FA $end
$var wire 1 a a $end
$var wire 1 b b $end
$var wire 1 c carry $end
$var wire 1 d cin $end
$var wire 1 e sum $end
$upscope $end
$upscope $end
$scope begin genblk1[5] $end
$scope module FA $end
$var wire 1 f a $end
$var wire 1 g b $end
$var wire 1 h carry $end
$var wire 1 i cin $end
$var wire 1 j sum $end
$upscope $end
$upscope $end
$scope module HA0 $end
$var wire 1 k a $end
$var wire 1 l b $end
$var wire 1 m cout $end
$var wire 1 n sum $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0n
0m
0l
0k
0j
0i
0h
0g
0f
0e
0d
0c
0b
0a
0`
0_
0^
0]
0\
0[
0Z
0Y
0X
0W
0V
0U
0T
0S
0R
b0 Q
b0 P
b0 O
b0 N
0M
0L
0K
0J
0I
0H
0G
0F
0E
0D
0C
0B
0A
0@
0?
0>
0=
0<
0;
0:
09
08
07
06
05
04
03
02
01
00
b0 /
b0 .
b0 -
b0 ,
b0 +
b0 *
b0 )
b0 (
b0 '
b0 &
b0 %
b0 $
b0 #
b0 "
0!
$end
#10
b1 "
b1 )
b1 P
1n
1k
b1 '
b1 +
b1 N
14
10
b1 /
b1 $
b1 &
b1 #
b1 %
#20
1[
1W
1V
1>
b110 "
b110 )
b110 P
0n
1R
0k
1;
19
b110 '
b110 +
b110 N
04
b100 .
15
00
b10 /
b11 $
b11 &
b10 #
b10 %
#30
0V
1`
1[
0R
09
1\
1W
b1100 "
b1100 )
b1100 P
0n
1C
1>
0k
0;
1B
1=
b1100 '
b1100 +
b1100 N
04
05
b1100 -
06
00
b0 .
b0 /
b100 $
b100 &
b11 #
b11 %
#40
1V
1R
1e
b11110 "
b11110 )
b11110 P
1`
19
1a
1\
1@
16
1H
b11110 '
b11110 +
b11110 N
1C
b1010 .
1G
0B
b10100 -
b110 $
b110 &
b101 #
b101 %
#50
1d
1^
1_
1j
1Y
1i
0[
b11100 Q
1c
1e
0V
1X
1n
b110001 "
b110001 )
b110001 P
0`
1]
1b
0R
17
1k
b11100 *
b11100 O
09
14
1<
0\
b1110 (
b1110 ,
1A
b10101 '
b10101 +
b10101 N
0C
1:
15
10
1;
1B
b111 /
b1110 .
b11100 -
b111 $
b111 &
b111 #
b111 %
#60
0e
0d
0^
0j
0_
0i
0Y
b0 Q
0c
0]
0n
1V
b1010 "
b1010 )
b1010 P
1`
0X
0b
0k
0a
0W
0<
b0 *
b0 O
04
0H
0>
1R
07
1\
b0 (
b0 ,
0A
0G
0=
19
b1010 '
b1010 +
b1010 N
1C
0:
00
0;
0B
05
b1010 .
b0 -
b0 /
b10 $
b10 &
b101 #
b101 %
#70
1e
1d
b1000 Q
1^
b10010 "
b10010 )
b10010 P
0`
1]
b1000 *
b1000 O
b100 (
b100 ,
1<
1:
15
1;
06
b110 /
b1100 .
b11 $
b11 &
b110 #
b110 %
#80
0e
0d
b0 Q
0^
0`
0V
0]
b0 *
b0 O
0\
0R
b0 (
b0 ,
0<
0C
09
b0 "
b0 )
b0 P
0n
0k
0@
0;
b0 '
b0 +
b0 N
04
0:
05
06
00
b0 .
b0 /
b0 $
b0 &
b111 #
b111 %
#90
