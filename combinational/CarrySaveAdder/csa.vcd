$date
	Tue Oct  1 00:50:36 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module CSA_tb $end
$var wire 6 ! sum [5:0] $end
$var wire 6 " carry [5:0] $end
$var reg 6 # A [5:0] $end
$var reg 6 $ B [5:0] $end
$var reg 6 % C [5:0] $end
$scope module uut $end
$var wire 6 & A [5:0] $end
$var wire 6 ' B [5:0] $end
$var wire 6 ( C [5:0] $end
$var wire 6 ) sum [5:0] $end
$var wire 6 * carry_out [5:0] $end
$scope begin genblk1[0] $end
$scope module fa1 $end
$var wire 1 + a $end
$var wire 1 , b $end
$var wire 1 - carry $end
$var wire 1 . cin $end
$var wire 1 / sum $end
$upscope $end
$upscope $end
$scope begin genblk1[1] $end
$scope module fa1 $end
$var wire 1 0 a $end
$var wire 1 1 b $end
$var wire 1 2 carry $end
$var wire 1 3 cin $end
$var wire 1 4 sum $end
$upscope $end
$upscope $end
$scope begin genblk1[2] $end
$scope module fa1 $end
$var wire 1 5 a $end
$var wire 1 6 b $end
$var wire 1 7 carry $end
$var wire 1 8 cin $end
$var wire 1 9 sum $end
$upscope $end
$upscope $end
$scope begin genblk1[3] $end
$scope module fa1 $end
$var wire 1 : a $end
$var wire 1 ; b $end
$var wire 1 < carry $end
$var wire 1 = cin $end
$var wire 1 > sum $end
$upscope $end
$upscope $end
$scope begin genblk1[4] $end
$scope module fa1 $end
$var wire 1 ? a $end
$var wire 1 @ b $end
$var wire 1 A carry $end
$var wire 1 B cin $end
$var wire 1 C sum $end
$upscope $end
$upscope $end
$scope begin genblk1[5] $end
$scope module fa1 $end
$var wire 1 D a $end
$var wire 1 E b $end
$var wire 1 F carry $end
$var wire 1 G cin $end
$var wire 1 H sum $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0H
0G
0F
0E
0D
1C
1B
0A
0@
0?
0>
1=
1<
1;
0:
19
18
17
16
15
04
03
12
11
10
1/
0.
0-
0,
1+
b1110 *
b10101 )
b11100 (
b1110 '
b111 &
b11100 %
b1110 $
b111 #
b1110 "
b10101 !
$end
#10000
