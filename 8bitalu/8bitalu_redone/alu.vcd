$date
	Sun Sep 29 13:45:28 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module ALU_8bit_tb $end
$var wire 1 ! zero_flag $end
$var wire 16 " result [15:0] $end
$var wire 1 # carry_flag $end
$var reg 1 $ clk $end
$var reg 8 % operand_A [7:0] $end
$var reg 8 & operand_B [7:0] $end
$var reg 3 ' operation [2:0] $end
$scope module dut $end
$var wire 8 ( operand_A [7:0] $end
$var wire 8 ) operand_B [7:0] $end
$var wire 3 * operation [2:0] $end
$var reg 1 # carry_flag $end
$var reg 16 + result [15:0] $end
$var reg 1 ! zero_flag $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b100000001 +
b0 *
b100111 )
b11011010 (
b0 '
b100111 &
b11011010 %
0$
1#
b100000001 "
0!
$end
#5
1$
#10
0#
b10110011 "
b10110011 +
0$
b1 '
b1 *
#15
1$
#20
b10000100110110 "
b10000100110110 +
0$
b10 '
b10 *
#25
1$
#30
b10 "
b10 +
0$
b11 '
b11 *
#35
1$
#40
b11111111 "
b11111111 +
0$
b100 '
b100 *
#45
1$
#50
b1111111111111101 "
b1111111111111101 +
0$
b101 '
b101 *
#55
1$
#60
b1111111100000000 "
b1111111100000000 +
0$
b110 '
b110 *
#65
1$
#70
b11111101 "
b11111101 +
0$
b111 '
b111 *
#75
1$
#80
0$
